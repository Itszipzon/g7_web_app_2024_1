CREATE TABLE Location (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(50) NOT NULL,
    Address VARCHAR(255) NOT NULL,
    IsBusiness BOOLEAN NOT NULL
);

CREATE TABLE Car (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    Maker VARCHAR(50) NOT NULL,
    Model VARCHAR(50) NOT NULL,
    Year INTEGER NOT NULL,
    Fuel VARCHAR(10) NOT NULL,
    Transmission VARCHAR(20) NOT NULL,
    Seats INTEGER NOT NULL,
    Body VARCHAR(20) NOT NULL
);

CREATE TABLE Storage (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    LID INTEGER NOT NULL,
    CID INTEGER NOT NULL,
    Price INTEGER NOT NULL,
    FOREIGN KEY (LID) REFERENCES Location(ID),
    FOREIGN KEY (CID) REFERENCES Car(ID)
);

CREATE TABLE Users (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(50) NOT NULL,
    Email VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    Salt VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(20) NOT NULL,
    Address VARCHAR(255) NOT NULL,
    Terms BOOLEAN NOT NULL,
    IsGuest BOOLEAN NOT NULL DEFAULT 0,
    IsAdmin BOOLEAN NOT NULL DEFAULT 0,
    DateCreated DATE DEFAULT CURRENT_DATE,
    CONSTRAINT guest_rule CHECK (
        (Password = '' OR Password IS NULL) AND IsGuest = 1 OR 
        (Password != '' AND Password IS NOT NULL AND IsGuest = 0)
    )
);

CREATE TABLE PurchaseHistory (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    UID INTEGER NOT NULL,
    SID INTEGER NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    purchaseDate DATE NOT NULL,
    status VARCHAR(20) NOT NULL,
    FOREIGN KEY (UID) REFERENCES User(ID),
    FOREIGN KEY (SID) REFERENCES Storage(ID)
);

CREATE TABLE Images (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    CID INTEGER NOT NULL,
    Name VARCHAR(255),
    ImageNumber INTEGER NOT NULL,
    ImageFromLink VARCHAR(255),
    FOREIGN KEY (CID) REFERENCES Car(ID)
);

CREATE TABLE Extras (
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(255) NOT NULL
);

CREATE TABLE CarExtras(
    ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    CID INTEGER NOT NULL,
    EID INTEGER NOT NULL,
    FOREIGN KEY (CID) REFERENCES Car(ID),
    FOREIGN KEY (EID) REFERENCES Extras(ID)
);